version: "3"
services:
  redis:
    image: redis:latest
    restart: always
    command: --port 6382
    ports:
      - "6382:6379"
    environment:
      - REDIS_PORT_NUMBER=6382
    volumes:
      - redis_data:/data
    networks:
      - asistente
  chatbot:
    image: chatbot_engine:latest
    build:
      context: chatbot_engine
      dockerfile: Dockerfile
    ports:
      - "9001:9000"
    restart: unless-stopped
    working_dir: /app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - QDRANT_URL=${QDRANT_URL}
      - QDRANT_KEY=${QDRANT_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - asistente
  frontend:
    image: frontend:latest
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    restart: always
    networks:
      - asistente
    depends_on:
      - chatbot
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      - CHATBOT_HOST=${CHATBOT_HOST}
      - CHATBOT_PORT=${CHATBOT_PORT}

networks:
  asistente:
    driver: bridge

volumes:
  redis_data:
    driver: local
